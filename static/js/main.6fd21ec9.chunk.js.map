{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitlesSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","sections/NavigationBar.js","sections/PageWrapper.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","style","Component","DownIcon","onClick","id","src","icon","alt","TitlesSection","src_components_Fullpage","color","backgroundColor","background","data","title","subtitle","Object","keys","links","map","key","react_social_icons","url","modules","activeClass","to","spy","smooth","offset","duration","delay","src_components_DownIcon","console","log","name","AboutSection","sections","items","p","content","SkillCard","skill","image","SkillSection","eachSkill","src_components_SkillCard","NavigationBar","menus","subMenus","subMenu","PageWrapper","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeColor","theme_num","state","theme","setState","colors","foreGround","backGround","bind","assertThisInitialized","iconTitle","lib_default","flakesMaxActive","snowColor","animationInterval","snowCharacter","src_sections_NavigationBar","src_sections_TitlesSection","src_sections_AboutSection","src_sections_SkillSection","App","src_sections_PageWrapper","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6fd21ec9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Fullpage.css';\r\n\r\nclass Fullpage extends Component {\r\n\r\n    render() {\r\n        const {children} = this.props;\r\n        return (\r\n\r\n            <div className={`fullPage ${this.props.className || ''} `} style={this.props.style}>\r\n                {children}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fullpage;","import React, {Component} from 'react';\r\nimport './DownIcon.css';\r\n// import data from \"../data.json\";\r\n\r\nclass DownIcon extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"pageDown\" onClick= {this.props.onClick}>\r\n                <div id=\"iconImage\">\r\n                    <img src={this.props.icon}  alt=\"down Icon\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DownIcon;","import React, {Component} from 'react';\r\nimport data from '../data.json';\r\nimport Fullpage from '../components/Fullpage';\r\nimport {SocialIcon} from 'react-social-icons';\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport { Link, Element} from 'react-scroll';\r\nimport './TitlesSection.css';\r\n\r\nclass TitlesSection extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fullpage className=\"first\" style={{color: this.props.color,  backgroundColor: this.props.background}}>\r\n\r\n                    <h1 className=\"title\">\r\n                        {data.title}\r\n                    </h1>\r\n                    <div>\r\n                        <h2>{data.subtitle}</h2>\r\n                    </div>\r\n                    <div className=\"icon-wrapper\">\r\n                        {\r\n                            Object.keys(data.links).map(key => {\r\n                                return (\r\n                                    <div className=\"icon\">\r\n                                        <SocialIcon url={data.links[key]}/>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </Fullpage>\r\n                <Link activeClass=\"active\" to=\"About\" spy={true} smooth={true} offset={50} duration={500} delay={200}>\r\n                    <DownIcon icon={this.props.icon} onClick={() => console.log('I am working')} />\r\n                </Link>\r\n                <Element name=\"About\" className=\"element\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TitlesSection;","import React, {Component} from 'react';\r\nimport Fullpage from '../components/Fullpage'\r\nimport data from '../data.json';\r\nimport './AboutSection.css'\r\nimport { Link, Element} from 'react-scroll';\r\nimport DownIcon from \"../components/DownIcon\";\r\n\r\nclass AboutSection extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fullpage className=\"second\" style={{color: this.props.color, backgroundColor: this.props.background}}>\r\n                    <h3>\r\n                        {data.sections[0].title}\r\n                    </h3>\r\n                    <div className=\"paragraphs\">\r\n                        {data.sections[0].items.map(p => {\r\n                                return <p>{p.content}</p>\r\n                            }\r\n                        )}\r\n                    </div>\r\n                </Fullpage>\r\n                <Link activeClass=\"active\" to=\"Skills\" spy={true} smooth={true} offset={50} duration={500} delay={200}>\r\n                    <DownIcon icon={this.props.icon} onClick={() => console.log('I am working')}/>\r\n                </Link>\r\n                <Element name=\"Skills\" className=\"element\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutSection;","import React, {Component} from 'react';\r\nimport './SkillCard.css';\r\n\r\nclass SkillCard extends Component {\r\n    render() {\r\n        const {skill} = this.props;\r\n        return (\r\n                <div className=\"card\">\r\n                    <img src={skill.content.image} alt=\"Skill card\"/>\r\n                    <h4>{skill.content.title}</h4>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SkillCard;","import React, {Component} from 'react';\r\nimport Fullpage from '../components/Fullpage'\r\nimport data from '../data.json';\r\nimport './SkillSection.css'\r\nimport SkillCard from '../components/SkillCard'\r\nimport {Element} from \"react-scroll/modules\";\r\n\r\nclass SkillSection extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <Fullpage className=\"third\" style={{color: this.props.color,  backgroundColor: this.props.background}}>\r\n                <Element name=\"Skills\" className=\"element\"/>\r\n                <h3>\r\n                    {data.sections[1].title}\r\n                </h3>\r\n                <div className=\"skills\">\r\n                {data.sections[1].items.map(eachSkill => {\r\n                        return (\r\n                            <SkillCard skill={eachSkill}/>\r\n                        )\r\n                    }\r\n                )}\r\n                </div>\r\n            </Fullpage>\r\n        );\r\n    }\r\n}\r\nexport default SkillSection;","import React, {Component} from 'react';\r\nimport data from '../data.json';\r\nimport './NavigationBar.css';\r\nimport {Link} from 'react-scroll';\r\n\r\n\r\nclass NavigationBar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"nav\" style={{color: this.props.color, backgroundColor: this.props.background}}>\r\n                <ul className=\"menus\">\r\n                    {data.menus[0].subMenus.map(subMenu => {\r\n                            return (\r\n                                <Link activeClass=\"active\" to={`${subMenu}`} spy={true} smooth={true} offset={50}\r\n                                      duration={500} delay={200}>\r\n                                    <li onClick={() => console.log(`${subMenu}`)}>{subMenu}</li>\r\n                                </Link>\r\n                            )\r\n                        }\r\n                    )}\r\n                </ul>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavigationBar;","import React, {Component} from 'react';\r\nimport TitlesSection from './TitlesSection';\r\nimport AboutSection from './AboutSection';\r\nimport SkillSection from './SkillSection';\r\nimport NavigationBar from './NavigationBar';\r\nimport SnowStorm from 'react-snowstorm';\r\nimport data from '../data.json'\r\n\r\nimport './PageWrapper.css'\r\n\r\nclass PageWrapper extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            theme: 0,\r\n            color: data.colors[0].foreGround,\r\n            background: data.colors[0].backGround,\r\n            icon: data.colors[0].icon\r\n        };\r\n        this.changeColor = this.changeColor.bind(this);\r\n    }\r\n\r\n    changeColor = () => {\r\n        let theme_num= this.state.theme + 1;\r\n        if(theme_num > 6) theme_num=0;\r\n        this.setState({\r\n            theme: this.state.theme < 6 ? this.state.theme + 1 : 0,\r\n            color: data.colors[theme_num].foreGround,\r\n            background: data.colors[theme_num].backGround,\r\n            icon: data.colors[theme_num].icon\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n                <div className=\"icon-menu\" onClick={this.changeColor}>\r\n                    <img src={this.state.icon[0]} alt=\"Painter icon\"/>\r\n                    <div style={{color: this.state.color}}>{data.menus[1].iconTitle}</div>\r\n\r\n                </div>\r\n\r\n                <SnowStorm flakesMaxActive={100} snowColor={this.state.color}  animationInterval = {20} snowCharacter = {\"*\"} />\r\n                <NavigationBar color={this.state.color} background={this.state.background[0]}/>\r\n                <TitlesSection color={this.state.color} background={this.state.background[0]} icon={this.state.icon[1]}/>\r\n                <AboutSection color={this.state.color} background={this.state.background[1]} icon={this.state.icon[1]}/>\r\n                <SkillSection color={this.state.color} background={this.state.background[2]}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageWrapper;","import React from 'react';\nimport PageWrapper from \"./sections/PageWrapper\";\n\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <PageWrapper/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}